version: '3.7'
services:
  drone-server:
    image: drone/drone:latest
    container_name: drone-server
    hostname: drone-server
    restart: unless-stopped
    volumes:
      - ../Data/drone:/data
    environment:
      DRONE_SERVER_HOST: "localhost" # changeme
      DRONE_SERVER_PROTO: "http"
      DRONE_RPC_SECRET: "bea26a2221fd8090ea38720fc445eca6" # Changeme
      DRONE_USER_CREATE: "username:admin,admin:true"
      DRONE_SERVER_PORT: ":80"
      DRONE_REGISTRATION_CLOSED: "true"
      DRONE_GITHUB_CLIENT_ID: "changeme" # changeme
      DRONE_GITHUB_CLIENT_SECRET: "changeme" # changeme
      DRONE_GITEA_CLIENT_ID: "changeme"
      DRONE_GITEA_CLIENT_SECRET: "changeme"
      DRONE_GITEA_SERVER: "changeme"
      DRONE_GIT_ALWAYS_AUTH: "true"
    labels:
      # Traefik Labels
      - "traefik.enable=true"
      # HTTPS Labels
      - "traefik.http.routers.drone-server.rule=Host(`localhost`)" # Domain Name
      - "traefik.http.routers.drone-server.entrypoints=web-secure"
      - "traefik.http.routers.drone-server.middlewares=drone-server-headers@docker"
      - "traefik.http.middlewares.drone-server-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.routers.drone-server.service=drone-server"
      - "traefik.http.routers.drone-server.tls=true"
      - "traefik.http.services.drone-server.loadbalancer.server.port=80" # Proxied Port
  drone-runner:
    image: drone/drone-runner-docker:latest
    container_name: drone-runner
    hostname: drone-runner
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "3000:3000"
    environment:
      DRONE_RPC_HOST: "drone-server"
      DRONE_RPC_PROTO: "http"
      DRONE_RPC_SECRET: "bea26a2221fd8090ea38720fc445eca6" # Changeme
